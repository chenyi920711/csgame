/**
 * Copyright &copy; 2012-2016 <a href="https://github.com/xla/csgame">csgame</a> All rights reserved.
 */
package com.csgame.modules.storepay.web;

import javax.servlet.http.HttpServletRequest;
import javax.servlet.http.HttpServletResponse;

import org.apache.shiro.authz.annotation.RequiresPermissions;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Controller;
import org.springframework.ui.Model;
import org.springframework.web.bind.annotation.ModelAttribute;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RequestParam;
import org.springframework.web.servlet.mvc.support.RedirectAttributes;

import com.csgame.common.config.Global;
import com.csgame.common.persistence.Page;
import com.csgame.common.web.BaseController;
import com.csgame.common.utils.StringUtils;
import com.csgame.modules.storepay.entity.StorePay;
import com.csgame.modules.storepay.service.StorePayService;
import com.csgame.modules.sys.service.RecCompanyIdservice;

/**
 * 门店充值Controller
 * @author wxf
 * @version 2018-08-16
 */
@Controller
@RequestMapping(value = "${adminPath}/storepay/storePay")
public class StorePayController extends BaseController {
	@Autowired
	private RecCompanyIdservice recCompanyIdservice;
	@Autowired
	private StorePayService storePayService;
	
	@ModelAttribute
	public StorePay get(@RequestParam(required=false) String id) {
		StorePay entity = null;
		if (StringUtils.isNotBlank(id)){
			entity = storePayService.get(id);
		}
		if (entity == null){
			entity = new StorePay();
		}
		return entity;
	}
	
	@RequiresPermissions("storepay:storePay:view")
	@RequestMapping(value = {"list", ""})
	public String list(StorePay storePay, HttpServletRequest request, HttpServletResponse response, Model model) {
		storePay.setStoreno(recCompanyIdservice.gecompanyid(request));
		Page<StorePay> page = storePayService.findPage(new Page<StorePay>(request, response), storePay); 
		model.addAttribute("page", page);
		return "modules/storepay/storePayList";
	}

	@RequiresPermissions("storepay:storePay:view")
	@RequestMapping(value = "form")
	public String form(StorePay storePay, Model model) {
		model.addAttribute("storePay", storePay);
		return "modules/storepay/storePayForm";
	}

	@RequiresPermissions("storepay:storePay:edit")
	@RequestMapping(value = "save")
	public String save(StorePay storePay, Model model, HttpServletRequest request, RedirectAttributes redirectAttributes) {
		if (!beanValidator(model, storePay)){
			return form(storePay, model);
		}
		storePay.setStoreno(recCompanyIdservice.gecompanyid(request));
		storePayService.save(storePay);
		addMessage(redirectAttributes, "保存充值记录成功");
		return "redirect:"+Global.getAdminPath()+"/storepay/storePay/?repage";
	}
	
	@RequiresPermissions("storepay:storePay:edit")
	@RequestMapping(value = "delete")
	public String delete(StorePay storePay, RedirectAttributes redirectAttributes) {
		storePayService.delete(storePay);
		addMessage(redirectAttributes, "删除充值记录成功");
		return "redirect:"+Global.getAdminPath()+"/storepay/storePay/?repage";
	}

}